// Stylesheet for the typescript_doc layout.
@charset "utf-8";
// $h4-font-size:  1rem !default;
// $primary: #0066ce !default;
// $secondary: #999 !default;
// $theme: 'light' !default;
$monospace: 'IBM Plex Mono', 'Fira Code', monospace !default;
$sans-serif: 'IBM Plex Sans', 'Source Sans Pro', sans-serif !default;

@import 'imports/astra';
@import 'imports/minimal-mistakes'; // main partials
@import 'imports/minimal-mistakes-overrides'; 

@media (min-width: 64em) {
    .page { padding-right: 0; }
}

$subheading-font-size: 0.7rem;
$h3-font-size: 1.25rem;
$h4-font-size:  1.17rem;
$code-font-size: 1rem;


// $semantic-blue: #0066ce;
// $semantic-red: #e34850;
// $semantic-orange: #e68619;

// $celery-400: rgb(68, 181, 86);
// $celery-500: rgb(75, 195, 95);
// $celery-600: rgb(81, 210, 103);
// $celery-700: rgb(88, 224, 111);
// $chartreuse-400: rgb(133, 208, 68);
// $chartreuse-500: rgb(142, 222, 73);
// $chartreuse-600: rgb(155, 236, 84);
// $chartreuse-700: rgb(163, 248, 88);
// $yellow-400: rgb(223, 191, 0);
// $yellow-500: rgb(237, 204, 0);
// $yellow-600: rgb(250, 217, 0);
// $yellow-700: rgb(255, 226, 46);
// $magenta-400: rgb(216, 55, 144);
// $magenta-500: rgb(226, 73, 157);
// $magenta-600: rgb(236, 90, 170);
// $magenta-700: rgb(245, 107, 183);
// $fuchsia-400: rgb(192, 56, 204);
// $fuchsia-500: rgb(207, 62, 220);
// $fuchsia-600: rgb(217, 81, 229);
// $fuchsia-700: rgb(227, 102, 239);
// $purple-400: rgb(146, 86, 217);
// $purple-500: rgb(157, 100, 225);
// $purple-600: rgb(168, 115, 233);
// $purple-700: rgb(180, 131, 240);
// $indigo-400: rgb(103, 103, 236);
// $indigo-500: rgb(117, 117, 241);
// $indigo-600: rgb(130, 130, 246);
// $indigo-700: rgb(144, 144, 250);
// $seafoam-400: rgb(27, 149, 154);
// $seafoam-500: rgb(32, 163, 168);
// $seafoam-600: rgb(35, 178, 184);
// $seafoam-700: rgb(38, 192, 199);
// $red-400: rgb(227, 72, 80);
// $red-500: rgb(236, 91, 98);
// $red-600: rgb(247, 109, 116);
// $red-700: rgb(255, 123, 130);
// $orange-400: rgb(230, 134, 25);
// $orange-500: rgb(242, 148, 35);
// $orange-600: rgb(249, 164, 63);
// $orange-700: rgb(255, 181, 91);
// $green-400: rgb(45, 157, 120);
// $green-500: rgb(51, 171, 132);
// $green-600: rgb(57, 185, 144);
// $green-700: rgb(63, 200, 156);
// $blue-400: rgb(38, 128, 235);
// $blue-500: rgb(55, 142, 240);
// $blue-600: rgb(75, 156, 245);
// $blue-700: rgb(90, 169, 250);
// $gray-50: rgb(37, 37, 37);
// $gray-75: rgb(47, 47, 47);
// $gray-100: rgb(50, 50, 50);
// $gray-200: rgb(62, 62, 62);
// $gray-300: rgb(74, 74, 74);
// $gray-400: rgb(90, 90, 90);
// $gray-500: rgb(110, 110, 110);
// $gray-600: rgb(144, 144, 144);
// $gray-700: rgb(185, 185, 185);
// $gray-800: rgb(227, 227, 227);
// $gray-900: rgb(255, 255, 255);

@if ($theme == "dark") {
    $background-color: #252a34 !default !global;
    $text-color: #eaeaea !default !global;
    $border-color: mix(#000, $background-color, 20%) !default !global;
    $card-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23) !default !global;
} @else {
    $background-color: #fff !default !global;
    $text-color: #223 !default !global;
    $border-color: mix(#fff, $text-color, 85%) !default !global;
    $card-background-color: #fafafa !default !global;
    $card-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23) !default !global;
}

section.page__content {
    font-family: $sans-serif;
    line-height: 1.5;
    color: $text-color;
}

section.page__content h1,
section.page__content h2,
section.page__content h3,
section.page__content h4,
section.page__content h5 {
    font-family: $sans-serif;
}

// For the sub-heading
h2 em {
    display: block;
    font-size: $subheading-font-size;
    line-height: .8;
    text-transform: uppercase;
    font-style: normal;
}

// For the "main" symbol in the heading
h2 strong {
    color: $primary;
    font-weight: 700;
}

h3 {
    position: sticky;
    top: -2px; // Needed for sticky
    width: calc(100%);
    font-size: $h3-font-size;
    font-feature-settings: normal;
    line-height: 1.5;
    border: 10px solid $background-color;
    border-bottom: 1px solid #e7e7e7;
    color: $text-color;
    z-index: 6;  // For sticky header to float above
    background: $background-color;
    transform: translateX(-10px);
    box-sizing: content-box;
    
}

/* Subheading above */
h3 em {
    display: block;
    font-size: $subheading-font-size;
    line-height:.8;
    font-weight: 700;
    text-transform: uppercase;
    font-style: normal;
    opacity: .4;
}

/* Categories */
.index h3 {
    font-family: $sans-serif;
    font-size: $h3-font-size;
    background: transparent;
    border: none;
    font-weight: 700;
    margin: 0;
    padding: 0;
}

code {
    font-family: $monospace;
    display: inline;
    overflow-wrap: break-word;
}

p > code,
a > code,
li > code,
figcaption > code,
td > code,
dd > code {
    // font-size: $code-font-size;
    border: 1px solid #ddd;
    background: #fefefe;
    border-radius: 4px;
    padding-left: 4px;
    padding-right: 4px;
    padding-bottom: 2px;
    padding-top: 2px;
    vertical-align: 1px;
    white-space: pre-wrap;
}

// Arguments, e.g. "a" in 'f(a:T)'
// Can also be used standalone, e.g. in markup
var, .var {
    font-family: $monospace;
    // font-size: $code-font-size;
    font-style: italic;
    font-weight: 400;
}

strong var {
    font-weight: 700;
}


.card {
    display: block;

    margin-top: 30px;
    margin-bottom: 40px;
    overflow: hidden;
    padding: 20px 17px;
    border-radius: 4px;
    border: 1px solid $border-color;
    background-color: $card-background-color;
    color: $text-color;
    max-width: 820px;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}


.card h3 {
    position: relative;  // Override sticky h3
    top: auto;      // Override sticky h3
    z-index: 5;  // Override sticky h3
    width: calc(100% + 40px);
    margin-top: -25px;
    margin-bottom: 10px;
    margin-left: -10px;
    margin-right: -20px;
    padding: 20px;
    padding-bottom: 10px;

    font-family: $monospace;
    font-size: 1.2rem;
    font-feature-settings: normal;
    line-height: 1.5;
    font-weight: 400;

    white-space: nowrap;

    color: $text-color;
    // letter-spacing: .25px;
    border: none;
    border-bottom: 1px solid #e7e7e7;
    box-sizing: border-box;
    display: flex; // To accommodate the anchor
}

/* Card header name */
.card h3 strong {
    color: $primary;
}



  
.card h3 > span {
    display: block;
    width: 100%;
    // Leave room for the anchor tag
    max-width: calc(100% - 24px);
    white-space: normal;
}

h4 {
    font-size: $h4-font-size;
    font-weight: 700;
}


ul {
    line-height: 1.333;
    list-style: none;
    padding-left: 0;
}

.page__content dl.inset {
    margin-left: 1rem;
}
.page__content dd {
    font-family: $sans-serif;
    font-size: 1rem;
}

.page__content dd ul {
    list-style: square;
    margin-left: 10px;
    padding-left: 10px;
}



.page__content p,
.page__content li {
    font-size: 1rem !important;
    line-height: 1.52;

    margin-top: 1rem;
    margin-bottom: 1rem;
    color: $text-color;
}

html {
    scroll-behavior: smooth
}

body.layout--api-layout #main a,
body.layout--api-layout #main a:active,
body.layout--api-layout #main a:visited,
body.layout--api-layout #main a:hover {
    color: $primary;
    text-decoration: none;
}

.page__content dt {
    font-family: $monospace;
    // font-size: $code-font-size;
    font-size: 1rem;
    font-weight: 400;
    padding: 8px;
    margin: -8px;
    border-radius: 8px;
}


.page__content dt strong {
    // To support target highliting for dt/dd
    // This is used when we have a 'short' interface/class
    // displayed in a card.
    position: relative;
    z-index : 0;
}

// Show the anchor when it is the target
.page__content dt .permalink {
    opacity: 0;
}
.page__content section:target h3 .permalink, 
.page__content dt:target .permalink ,
.page__content dt:hover .permalink {
    opacity: 1;
}

.page__content dt[id]:hover {
    background: #f0f0f0;
}

.page__content dt strong {
    color: $text-color;
}

.page__content dt em {
    color: $secondary;
}

.page__content dd {
    font-size: 1rem;
    color: $text-color;

    margin-bottom: 20px;
}

table {
    font-size: 1rem; // .main.sccs has it at .75em
    width: 100%;
    display: table;
}

thead {
    background-color: transparent;
    border-bottom: 1px solid #333;
}
tr {
    width: 100%;
}
td {
    border-bottom-color: #ddd;
}

// td:last-of-type() {
//     width: 100%;
// }

dd div.highlight {
    margin-top: 1.5em;
}


.page__content .card p:nth-child(1) {
    margin-top: 0;
}

.index ul,
ul.index {
    column-width: 28ex; // Approx. maximum length of a symbol (in char)
    column-gap: 20px;
    padding: 0;
    list-style: none;
    line-height: 1.333;
}

.index li {
    display: flex;
    font-family: $monospace;
    font-size: $code-font-size !important;
    margin: 0;
    box-sizing: content-box;
    break-inside: avoid-column;
}

.index li a,
.index li a:visited {
    text-decoration: none;
}

.index li a:hover,
.index li a:active {
    color: $primary;
}

/* Anchor icon */
.permalink { 
    float: right;
}

.permalink svg {
   display: inline-block;
   font-size: inherit;
   width: 1em;
   height: 1em;
   overflow: visible;
   vertical-align: -.2em;
}

#main a.externallink svg {
    width: .8em;
    height: .8em;
    vertical-align: 0;
    margin-left: .5ex;
    margin-right: .5ex
}

.page__content h1 .permalink,
.page__content h2 .permalink,
.page__content h3 .permalink,
.page__content h4 .permalink,
.page__content h5 .permalink,
.page__content h6 .permalink {
    font-size: 1em;
    left: -.5em;
}
.page__content section {
	scroll-margin-top: 5em; // Would be nice, but can't get it to work
} 
  
.page__content section:target h3 span strong, 
.page__content h2:target span strong  {
    position: relative;
    z-index: 0;
}
.page__content dt:target strong::after,
.page__content section:target h3 span strong::after,
.page__content h2:target span strong::after {
    content: '';
    position: absolute;
    top: -8px;
    left: -8px;
    border-radius: 8px;
    width: calc(100% + 16px);
    height: calc(100% + 16px);
    background: hsla(49, 100%, 63%, 0.56); // hsla(58, 100%, 50%, 0.56);
    z-index: -1;
}



.modifier-tag, .tag-name {
    display: inline-block;
    white-space: nowrap;
    font-size: 13px;
    line-height: 18px;
    font-weight: 400;
    font-variant: normal;
    font-style: normal;
    color: $semantic-blue;

    height: 22px;

    margin-left: 0;
    margin-right: 16px;

    padding-left: 10px;
    padding-right: 10px;
    padding-top: 1px;
    padding-bottom: 1px;

    vertical-align: text-bottom;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;

    border: 1px solid $semantic-blue;
    border-radius: 3px;

    background: transparent;

    min-width: 90px;
    text-align: center;

    vertical-align: middle;
}

// Used for "Implemented by:", "Extends:", etc...
.tag-name {
    text-align: right;
    color: $text-color;
    border-color: $background-color;
    margin-right: 0;
    font-weight: 700;
}

.modifier-tag + .modifier-tag {
    margin-left: 16px;
}

.red.modifier-tag {
    color: $semantic-red;
    border-color: $semantic-red;
}


.orange.modifier-tag {
    color: $semantic-orange;
    border-color: $semantic-orange;
}
// A block above a method or property name, at the very 
// top of a card section, that groups a series of flags
// such as "exported", "protected", "private", etc...
// (can also be displayed inline as span.flags for classCard)
div.flags {
    margin-bottom: 10px;
}

.page__content .notice--info h4,
.page__content .notice--warning h4,
.page__content .notice--danger h4 {
    font-size: $h4-font-size;
    letter-spacing: -0.5px;
    text-transform: uppercase;
}

.page__content .notice--info code, 
.page__content .notice--warning code, 
.page__content .notice--danger code {
    background: inherit;
}

.page__content .notice--danger h4 {
    color: $semantic-red;
}

.deprecated {
    text-decoration: line-through;
}






// The name of a referenced type, e.g.
// `Bar` in `type Foo = Bar`
.reference, .typeParameter {
    font-weight: 700;
}

// For a string, in quotes
.stringLiteral {
    color: $gray-400;
}

// Punctuation signs, "=", "|", ":". 
// For example "type foo = number"
.punct {
    color: $indigo-400;
    font-weight: 700;
}

// For "string", "number", "void", "typeof", etc...
.keyword {
    color: $purple-400;
    // font-weight: inherit;
}

// The "?" symbol to indicate optional arguments
// The '...' string to indicate 'rest' arguments
.modifier {
    color: $magenta-400;
    font-weight: 700;
}


// For {...} blocks (unions, intersections)
ul.type-block {
    margin: 0;
}
ul.type-block li {
    margin: 0;
    margin-left: 1em;
}

div.highlighter-rouge,
figure.highlight {
    border-radius: 8px;
}


@media (min-width: 80em) {
    .sidebar {
        width: calc(200px - 1em);
    }
    .page {
        width: calc(100% - 200px);
        padding-right: 200px;
    }
}
