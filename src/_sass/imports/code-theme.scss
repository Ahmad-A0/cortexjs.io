/* tomorrow */
// base00  #ffffff  Default Background
// base01  #e0e0e0  Lighter Background (Used for status bars, line number and folding marks)
// base02  #d6d6d6  Selection Background
// base03  #8e908c  Comments, Invisibles, Line Highlighting
// base04  #969896  Dark Foreground (Used for status bars)
// base05  #4d4d4c  Default Foreground, Caret, Delimiters, Operators
// base06  #282a2e  Light Foreground (Not often used)
// base07  #1d1f21  Light Background (Not often used)
// base08  #c82829  Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
// base09  #f5871f  Integers, Boolean, Constants, XML Attributes, Markup Link Url
// base0A  #eab700  Classes, Markup Bold, Search Text Background
// base0B  #718c00  Strings, Inherited Class, Markup Code, Diff Inserted
// base0C  #3e999f  Support, Regular Expressions, Escape Characters, Markup Quotes
// base0D  #4271ae  Functions, Methods, Attribute IDs, Headings
// base0E  #8959a8  Keywords, Storage, Selector, Markup Italic, Diff Changed
// base0F  #a3685a  Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?>

/* tomorrow-night
base00  #2d2d2d  Default Background
base01  #393939  Lighter Background (Used for status bars, line number and folding marks)
base02  #515151  Selection Background
base03  #999999  Comments, Invisibles, Line Highlighting
base04  #b4b7b4  Dark Foreground (Used for status bars)
base05  #cccccc  Default Foreground, Caret, Delimiters, Operators
base06  #e0e0e0  Light Foreground (Not often used)
base07  #ffffff  Light Background (Not often used)
base08  #f2777a  Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
base09  #f99157  Integers, Boolean, Constants, XML Attributes, Markup Link Url
base0A  #ffcc66  Classes, Markup Bold, Search Text Background
base0B  #99cc99  Strings, Inherited Class, Markup Code, Diff Inserted
base0C  #66cccc  Support, Regular Expressions, Escape Characters, Markup Quotes
base0D  #6699cc  Functions, Methods, Attribute IDs, Headings
base0E  #cc99cc  Keywords, Storage, Selector, Markup Italic, Diff Changed
base0F  #a3685a  Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?>
*/



/* variation based on tomorrow-night */
$base00: #35434e;
$base01: #282a2e;
$base02: #373b41;
$base03: #969896;
$base04: #b4b7b4;
$base05: #c5c8c6;
$base06: #e0e0e0;
$base07: #ffffff;
$base0c: #cc6666;
$base09: #f5871f; 
$base0a: #f0c674;
$base0b: #64cf75;
$base08: #8abeb7;
$base0d: #81a2be;
$base0e: #b294bb;
$base0f: #a3685a;


/*

    Name:       Base16 Tomorrow Dark
    Author:     Chris Kempson (http://chriskempson.com)

    highlight.js v8.0 template by Jan T. Sott (https://github.com/idleberg/base16-highlight.js)
    Original Base16 color scheme by Chris Kempson (https://github.com/chriskempson/base16)

*/

/* Tomorrow Comment */
.hljs-comment {
    color: var(--base-04, $base04);
}

/* Function (JS) and tag (HTML) names */
.hljs-tag, .hljs-title {
    color: var(--base-0a, $base0a);
}


/* Tomorrow Red */
.hljs-variable,
.hljs-attribute,
.hljs-regexp,
.ruby .hljs-constant,
.xml .hljs-tag .hljs-title,
.xml .hljs-pi,
.xml .hljs-doctype,
.html .hljs-doctype,
.css .hljs-id,
.css .hljs-class,
.css .hljs-pseudo {
    color: var(--base-0c, $base0c);
}


/* Tomorrow Orange */
.hljs-number,
.hljs-preprocessor,
.hljs-built_in,
.hljs-literal,
.hljs-params,
.hljs-constant {
    color: var(--base-09, $base09);
    font-weight: normal;
}

/* Tomorrow Yellow */
.ruby .hljs-class .hljs-title,
.css .hljs-rules .hljs-attribute {
    color: var(--base-0a, $base0a);
}

/* Tomorrow Green */
.hljs-string,
.hljs-value,
.hljs-inheritance,
.hljs-header,
.ruby .hljs-symbol,
.xml .hljs-cdata {
    color: var(--base-0b, $base0b);
}

/* Tomorrow Aqua */
.css .hljs-hexcolor {
    color: var(--base-08, $base08);
}

/* Tomorrow Blue */
.hljs-function,
.python .hljs-decorator,
.python .hljs-title,
.ruby .hljs-function .hljs-title,
.ruby .hljs-title .hljs-keyword,
.perl .hljs-sub,
.javascript .hljs-title,
.coffeescript .hljs-title {
    color: var(--base-0d, $base0d);
    font-weight: bold;
}

/* Tomorrow Purple */
.hljs-keyword,
.javascript .hljs-function {
    color: var(--base-0e, $base0e);
    font-weight: bold;
}

.hljs {
    display: block;
    background: var(--base-00, $base00);
    color: var(--base-05, $base05);
    padding: 0.5em;
}

.coffeescript .javascript,
.javascript .xml,
.tex .hljs-formula,
.xml .javascript,
.xml .vbscript,
.xml .css,
.xml .hljs-cdata {
    opacity: 0.5;
}

// Roughe typographic adjustments.
// See https://github.com/rouge-ruby/rouge/wiki/List-of-tokens

.highlight .c1,     // Single line comment
.highlight .cm      // Multiline comment
 {
    font-style: italic;
}

.highlight .k,       // keywords
.highlight .kc,       // keywords constant
.highlight .kd,       // keywords declaration
.highlight .kn,       // keywords namespace
.highlight .kp,       // keywords pseudi
.highlight .kr,       // keywords reserved
.highlight .kt,       // keywords type
.highlight .kv       // keywords variable
 {
    font-weight: bold;
}

// Styling for Code Playground is done inside the component
// .cm-s-tomorrow-night.CodeMirror { background: var(--console-background); color: var(--base-05, $base05); }


// .cm-s-tomorrow-night div.CodeMirror-selected { background: var(--base-01, $base01); }
// .cm-s-tomorrow-night .CodeMirror-line::selection, .cm-s-tomorrow-night .CodeMirror-line > span::selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::selection { background: var(--semantic-blue, #0066ce); }
// .cm-s-tomorrow-night .CodeMirror-line::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span::-moz-selection, .cm-s-tomorrow-night .CodeMirror-line > span > span::-moz-selection { background: var(--semantic-blue, #0066ce); }
// .cm-s-tomorrow-night .CodeMirror-gutters { background: var(--base-00, $base00); border-right: 0px; }
// .cm-s-tomorrow-night .CodeMirror-guttermarker { color: var(--base-0c, $base0c); }
// .cm-s-tomorrow-night .CodeMirror-guttermarker-subtle { color: var(--base-03, $base03); }
// .cm-s-tomorrow-night .CodeMirror-linenumber { color: var(--base-04, $base04); }
// .cm-s-tomorrow-night .CodeMirror-cursor { border-left: 1px solid var(--base-0d, $base0d); }

// .cm-s-tomorrow-night span.cm-comment { color: var(--base-09, $base09); }
// .cm-s-tomorrow-night span.cm-atom { color: var(--base-0e, $base0e); }
// .cm-s-tomorrow-night span.cm-number { color: var(--base-0e, $base0e); }

// .cm-s-tomorrow-night span.cm-property, .cm-s-tomorrow-night span.cm-attribute { color: var(--base-0a, $base0a); }
// .cm-s-tomorrow-night span.cm-keyword { color: var(--base-0c, $base0c); }
// .cm-s-tomorrow-night span.cm-string { color: var(--base-0a, $base0a); }

// .cm-s-tomorrow-night span.cm-variable { color: var(--base-0b, $base0b); }
// .cm-s-tomorrow-night span.cm-variable-2 { color: var(--base-0d, $base0d); }
// .cm-s-tomorrow-night span.cm-def { color: var(--base-09, $base09); }
// .cm-s-tomorrow-night span.cm-bracket { color: var(--base-05, $base05); }
// .cm-s-tomorrow-night span.cm-tag { color: var(--base-0a, $base0a); }
// .cm-s-tomorrow-night span.cm-link { color: var(--base-0e, $base0e); }
// .cm-s-tomorrow-night span.cm-error { background: var(--base-0c, $base0c); color: var(--base-03, $base03); }

// .cm-s-tomorrow-night .CodeMirror-activeline-background { background: var(--base-02, $base02); }
// .cm-s-tomorrow-night .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }



code-playground {
  margin-bottom: 2em;
}

code-playground::part(editor):hover {
  transform: scale(1.007)
}

code-playground::part(editor):focus-within {
  transform: scale(1.007);
  border-color: #fff;
  outline: -webkit-focus-ring-color solid 2px;
}

code-playground::part(editor) {
  position: relative;
  border: 3px solid transparent;
  --base-00: var(--console-background, var(--blue-900));
  background-image: linear-gradient(90deg, rgba(0, 0, 0, 0.3) 0%, transparent 50%, rgba(0, 0, 0, 0.4) 100%);
  color: var(--console-color) !important;

  text-shadow: 0 0 5px #C8C8C870;
  box-shadow: inset 1px 1px 15px #000;
  border-radius: 8px;

  font-size: 1.1rem;
  line-height: 1.4;
}


code-playground::part(console) {
  position: relative;
  --base-00: var(--console-background, var(--blue-900));
  background-image: linear-gradient(90deg, rgba(0, 0, 0, 0.3) 0%, transparent 50%, rgba(0, 0, 0, 0.4) 100%);


  --selection-background: var(--semantic-blue, #0066ce);
  --selection-color: var(--semantic-orange);

  font-size: 1.1rem;
  line-height: 1.4;
}

// Does not work. Need a variable for the selection color.
// code-playground::part(editor) *::selection {
//   background-color: var(--semantic-blue, #0066ce);
//   color: var(--semantic-orange);
// }

code-playground::part(editor)::after,
code-playground::part(console)::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(black, 0.10),
    rgba(black, 0.10) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
}


@media (prefers-color-scheme: dark) {
  code-playground::part(editor) {
    box-shadow: inset 1px 1px 30px rgba(0, 0, 0, 0.4);
  }  

}